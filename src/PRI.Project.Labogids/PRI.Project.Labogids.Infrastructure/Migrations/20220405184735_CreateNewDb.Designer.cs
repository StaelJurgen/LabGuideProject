// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRI.Project.Labogids.Infrastructure.Data;

namespace PRI.Project.Labogids.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220405184735_CreateNewDb")]
    partial class CreateNewDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PRI.Project.Labogids.Core.Entities.Laboratory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Laboratories");
                });

            modelBuilder.Entity("PRI.Project.Labogids.Core.Entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LaboratoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("SpecimenId")
                        .HasColumnType("int");

                    b.Property<string>("Synonym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.Property<int>("TurnAroundTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LaboratoryId");

                    b.HasIndex("RequestDefinitionId");

                    b.HasIndex("SpecimenId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("PRI.Project.Labogids.Core.Entities.ReferenceValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaximalAge")
                        .HasColumnType("int");

                    b.Property<double>("MaximumValue")
                        .HasColumnType("float");

                    b.Property<double>("MinimumValue")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("ReferenceValues");
                });

            modelBuilder.Entity("PRI.Project.Labogids.Core.Entities.RequestDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillingCode")
                        .HasColumnType("int");

                    b.Property<string>("CumulationRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnoseRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestDefinitions");
                });

            modelBuilder.Entity("PRI.Project.Labogids.Core.Entities.Specimen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specimens");
                });

            modelBuilder.Entity("PRI.Project.Labogids.Core.Entities.StorageCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.Property<int>("TimeReference")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StorageConditions");
                });

            modelBuilder.Entity("PropertyStorageCondition", b =>
                {
                    b.Property<int>("PropertiesId")
                        .HasColumnType("int");

                    b.Property<int>("StorageConditionsId")
                        .HasColumnType("int");

                    b.HasKey("PropertiesId", "StorageConditionsId");

                    b.HasIndex("StorageConditionsId");

                    b.ToTable("PropertyStorageCondition");
                });

            modelBuilder.Entity("PRI.Project.Labogids.Core.Entities.Property", b =>
                {
                    b.HasOne("PRI.Project.Labogids.Core.Entities.Laboratory", "Laboratory")
                        .WithMany()
                        .HasForeignKey("LaboratoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRI.Project.Labogids.Core.Entities.RequestDefinition", "RequestDefinition")
                        .WithMany()
                        .HasForeignKey("RequestDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRI.Project.Labogids.Core.Entities.Specimen", "Specimen")
                        .WithMany()
                        .HasForeignKey("SpecimenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratory");

                    b.Navigation("RequestDefinition");

                    b.Navigation("Specimen");
                });

            modelBuilder.Entity("PRI.Project.Labogids.Core.Entities.ReferenceValue", b =>
                {
                    b.HasOne("PRI.Project.Labogids.Core.Entities.Property", null)
                        .WithMany("ReferenceValues")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PropertyStorageCondition", b =>
                {
                    b.HasOne("PRI.Project.Labogids.Core.Entities.Property", null)
                        .WithMany()
                        .HasForeignKey("PropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRI.Project.Labogids.Core.Entities.StorageCondition", null)
                        .WithMany()
                        .HasForeignKey("StorageConditionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PRI.Project.Labogids.Core.Entities.Property", b =>
                {
                    b.Navigation("ReferenceValues");
                });
#pragma warning restore 612, 618
        }
    }
}
